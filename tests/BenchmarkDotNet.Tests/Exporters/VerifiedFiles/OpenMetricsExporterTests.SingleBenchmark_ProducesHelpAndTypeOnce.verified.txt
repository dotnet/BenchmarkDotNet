# HELP benchmark_error_nanoseconds Standard error of the mean execution time in nanoseconds.
# TYPE benchmark_error_nanoseconds gauge
# UNIT benchmark_error_nanoseconds nanoseconds
benchmark_error_nanoseconds{method="Foo", param1="value1", type="MockBenchmarkClass"} 0
benchmark_error_nanoseconds{method="Foo", param1="value2", type="MockBenchmarkClass"} 0
benchmark_error_nanoseconds{method="Foo", param1="value3", type="MockBenchmarkClass"} 0
# HELP benchmark_execution_time_nanoseconds Mean execution time in nanoseconds.
# TYPE benchmark_execution_time_nanoseconds gauge
# UNIT benchmark_execution_time_nanoseconds nanoseconds
benchmark_execution_time_nanoseconds{method="Foo", param1="value1", type="MockBenchmarkClass"} 0.1
benchmark_execution_time_nanoseconds{method="Foo", param1="value2", type="MockBenchmarkClass"} 0.1
benchmark_execution_time_nanoseconds{method="Foo", param1="value3", type="MockBenchmarkClass"} 0.1
# HELP benchmark_gc_gen0_collections_total Total number of Gen 0 garbage collections during the benchmark execution.
# TYPE benchmark_gc_gen0_collections_total counter
benchmark_gc_gen0_collections_total{method="Foo", param1="value1", type="MockBenchmarkClass"} 0
benchmark_gc_gen0_collections_total{method="Foo", param1="value2", type="MockBenchmarkClass"} 0
benchmark_gc_gen0_collections_total{method="Foo", param1="value3", type="MockBenchmarkClass"} 0
# HELP benchmark_gc_gen1_collections_total Total number of Gen 1 garbage collections during the benchmark execution.
# TYPE benchmark_gc_gen1_collections_total counter
benchmark_gc_gen1_collections_total{method="Foo", param1="value1", type="MockBenchmarkClass"} 0
benchmark_gc_gen1_collections_total{method="Foo", param1="value2", type="MockBenchmarkClass"} 0
benchmark_gc_gen1_collections_total{method="Foo", param1="value3", type="MockBenchmarkClass"} 0
# HELP benchmark_gc_gen2_collections_total Total number of Gen 2 garbage collections during the benchmark execution.
# TYPE benchmark_gc_gen2_collections_total counter
benchmark_gc_gen2_collections_total{method="Foo", param1="value1", type="MockBenchmarkClass"} 0
benchmark_gc_gen2_collections_total{method="Foo", param1="value2", type="MockBenchmarkClass"} 0
benchmark_gc_gen2_collections_total{method="Foo", param1="value3", type="MockBenchmarkClass"} 0
# HELP benchmark_gc_total_operations_total Total number of garbage collection operations during the benchmark execution.
# TYPE benchmark_gc_total_operations_total counter
benchmark_gc_total_operations_total{method="Foo", param1="value1", type="MockBenchmarkClass"} 0
benchmark_gc_total_operations_total{method="Foo", param1="value2", type="MockBenchmarkClass"} 0
benchmark_gc_total_operations_total{method="Foo", param1="value3", type="MockBenchmarkClass"} 0
# HELP benchmark_label Additional metric label
# TYPE benchmark_label gauge
benchmark_label{method="Foo", param1="value1", type="MockBenchmarkClass"} 42
benchmark_label{method="Foo", param1="value2", type="MockBenchmarkClass"} 42
benchmark_label{method="Foo", param1="value3", type="MockBenchmarkClass"} 42
# HELP benchmark_p90_nanoseconds 90th percentile execution time in nanoseconds.
# TYPE benchmark_p90_nanoseconds gauge
# UNIT benchmark_p90_nanoseconds nanoseconds
benchmark_p90_nanoseconds{method="Foo", param1="value1", type="MockBenchmarkClass"} 0.1
benchmark_p90_nanoseconds{method="Foo", param1="value2", type="MockBenchmarkClass"} 0.1
benchmark_p90_nanoseconds{method="Foo", param1="value3", type="MockBenchmarkClass"} 0.1
# HELP benchmark_p95_nanoseconds 95th percentile execution time in nanoseconds.
# TYPE benchmark_p95_nanoseconds gauge
# UNIT benchmark_p95_nanoseconds nanoseconds
benchmark_p95_nanoseconds{method="Foo", param1="value1", type="MockBenchmarkClass"} 0.1
benchmark_p95_nanoseconds{method="Foo", param1="value2", type="MockBenchmarkClass"} 0.1
benchmark_p95_nanoseconds{method="Foo", param1="value3", type="MockBenchmarkClass"} 0.1
# HELP benchmark_stddev_nanoseconds Standard deviation of execution time in nanoseconds.
# TYPE benchmark_stddev_nanoseconds gauge
# UNIT benchmark_stddev_nanoseconds nanoseconds
benchmark_stddev_nanoseconds{method="Foo", param1="value1", type="MockBenchmarkClass"} 0
benchmark_stddev_nanoseconds{method="Foo", param1="value2", type="MockBenchmarkClass"} 0
benchmark_stddev_nanoseconds{method="Foo", param1="value3", type="MockBenchmarkClass"} 0
# EOF
